//MongoDBMapReduce.java
	
//package com.journaldev.mongodb;
 
import java.net.UnknownHostException;
 
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBObject;
import com.mongodb.MapReduceCommand;
import com.mongodb.MapReduceOutput;
import com.mongodb.MongoClient;
 
public class MongoDBMapReduce {
 
    public static void main(String[] args) throws UnknownHostException {
 
        // create an instance of client and establish the connection
        MongoClient m1 = new MongoClient();
 
        // get the test db,use your own
        DB db = m1.getDB("journaldev");
 
        // get the car collection
        DBCollection coll = db.getCollection("car");
 
        // map function to categorize overspeed cars
        String carMap = "function (){" + "var criteria;"
                + "if ( this.speed > 70 ) {" + "criteria = 'overspeed';"
                + "emit(criteria,this.speed);" + "}" + "};";
 
        // reduce function to add all the speed and calculate the average speed
 
        String carReduce = "function(key, speed) {" + "var total =0;"
                + "for (var i = 0; i < speed.length; i++) {"
                + "total = total+speed[i];" + "}"
                + "return total/speed.length;" + "};";
 
        // create the mapreduce command by calling map and reduce functions
        MapReduceCommand mapcmd = new MapReduceCommand(coll, carMap, carReduce,
                null, MapReduceCommand.OutputType.INLINE, null);
 
        // invoke the mapreduce command
        MapReduceOutput cars = coll.mapReduce(mapcmd);
 
        // print the average speed of cars
        for (DBObject o : cars.results()) {
 
            System.out.println(o.toString());
 
        }
 
    }
 
}



/*

Above java program produces following output.
1
	
{ "_id" : "overspeed" , "value" : 85.0}

That’s all for a brief overview of Map Reduce functions in the MongoDB database, we will look other MongoDB features in coming posts.  */





> use car
switched to db car
> db.car.insert(
... [
... {car_id:"c1",name:"Audi",color:"Black",cno:"H110",mfdcountry:"Germany",speed:72,price:11.25}, {c
ar_id:"c2",name:"Polo",color:"White",cno:"H111",mfdcountry:"Japan",speed:65,price:8.5}, {car_id:"c3"
,name:"Alto",color:"Silver",cno:"H112",mfdcountry:"India",speed:53,price:4.5},
... {car_id:"c4",name:"Santro",color:"Grey",cno:"H113",mfdcountry:"Sweden",speed:89,price:3.5} ,
... {car_id:"c5",name:"Zen",color:"Blue",cno:"H114",mfdcountry:"Denmark",speed:94,price:6.5}
...
... ] )
BulkWriteResult({
        "writeErrors" : [ ],
        "writeConcernErrors" : [ ],
        "nInserted" : 5,
        "nUpserted" : 0,
        "nMatched" : 0,
        "nModified" : 0,
        "nRemoved" : 0,
        "upserted" : [ ]
})
> db.car.find()
{ "_id" : ObjectId("55e75011671a6f26cb439c8c"), "car_id" : "c1", "name" : "Audi", "color" : "Black",
 "cno" : "H110", "mfdcountry" : "Germany", "speed" : 72, "price" : 11.25 }
{ "_id" : ObjectId("55e75011671a6f26cb439c8d"), "car_id" : "c2", "name" : "Polo", "color" : "White",
 "cno" : "H111", "mfdcountry" : "Japan", "speed" : 65, "price" : 8.5 }
{ "_id" : ObjectId("55e75011671a6f26cb439c8e"), "car_id" : "c3", "name" : "Alto", "color" : "Silver"
, "cno" : "H112", "mfdcountry" : "India", "speed" : 53, "price" : 4.5 }
{ "_id" : ObjectId("55e75011671a6f26cb439c8f"), "car_id" : "c4", "name" : "Santro", "color" : "Grey"
, "cno" : "H113", "mfdcountry" : "Sweden", "speed" : 89, "price" : 3.5 }
{ "_id" : ObjectId("55e75011671a6f26cb439c90"), "car_id" : "c5", "name" : "Zen", "color" : "Blue", "
cno" : "H114", "mfdcountry" : "Denmark", "speed" : 94, "price" : 6.5 }
> db.car.find().pretty()
{
        "_id" : ObjectId("55e75011671a6f26cb439c8c"),
        "car_id" : "c1",
        "name" : "Audi",
        "color" : "Black",
        "cno" : "H110",
        "mfdcountry" : "Germany",
        "speed" : 72,
        "price" : 11.25
}
{
        "_id" : ObjectId("55e75011671a6f26cb439c8d"),
        "car_id" : "c2",
        "name" : "Polo",
        "color" : "White",
        "cno" : "H111",
        "mfdcountry" : "Japan",
        "speed" : 65,
        "price" : 8.5
}
{
        "_id" : ObjectId("55e75011671a6f26cb439c8e"),
        "car_id" : "c3",
        "name" : "Alto",
        "color" : "Silver",
        "cno" : "H112",
        "mfdcountry" : "India",
        "speed" : 53,
        "price" : 4.5
}
{
        "_id" : ObjectId("55e75011671a6f26cb439c8f"),
        "car_id" : "c4",
        "name" : "Santro",
        "color" : "Grey",
        "cno" : "H113",
        "mfdcountry" : "Sweden",
        "speed" : 89,
        "price" : 3.5
}
{
        "_id" : ObjectId("55e75011671a6f26cb439c90"),
        "car_id" : "c5",
        "name" : "Zen",
        "color" : "Blue",
        "cno" : "H114",
        "mfdcountry" : "Denmark",
        "speed" : 94,
        "price" : 6.5
}
> var speedmap = function (){
... var criteria;
... if ( this.speed > 70 ) {
... criteria = 'overspeed';
... emit(criteria,this.speed);
... }
... };
> var avgspeed_reducemap = function(key, speed) {
...      var total =0;
...      for (var i = 0; i < speed.length; i++) {
...     total = total+speed[i];
...      }
...      return total/speed.length;
... };
> var ret = db.car.mapReduce(speedmap, avgspeed_reducemap, {out: "avgspeed"});
>
> db.avgspeed.find()
{ "_id" : "overspeed", "value" : 85 }
> db.speedmap.find()
>
